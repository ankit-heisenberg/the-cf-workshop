Description: Deploys an Auto Scaling Group of webservers with a load balancer

Outputs:
  loadBalancerDNSName:
    Value: !Sub ${loadBalancer.DNSName}

Parameters:
  DesiredCapacity:
    Description: desired capacity of webservers in the auto scaling group
    Type: Number
    Default: 2
  PublicSubnetOneId:
    Description: A public subnet Id to use for the load balancer
    Type: AWS::EC2::Subnet::Id
  PublicSubnetTwoId:
    Description: A public subnet Id to use for the load balancer, in a different availability zone
    Type: AWS::EC2::Subnet::Id



Resources:

  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Web Server
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          SourceSecurityGroupId: !Sub ${loadBalancerSecurityGroup.GroupId}
          FromPort: 80
          ToPort: 80

  loadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Web Server
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80

  loadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: true
      Listeners:
        -
          InstancePort: 80
          InstanceProtocol: HTTP
          LoadBalancerPort: 80
          Protocol: HTTP
      SecurityGroups:
        !Sub ${loadBalancerSecurityGroup.GroupId}
      Subnets:
        - !Ref PublicSubnetOneId
        - !Ref PublicSubnetTwoId

  autoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DesiredCapacity: !Ref DesiredCapacity
    LaunchConfigurationName: !Ref launchConfiguration
    LoadBalancerNames:
      - !Ref loadBalancer
    MaxSize: !Ref DesiredCapacity
    MinSize: 0
    VPCZoneIdentifier:
      - !Ref PublicSubnetOneId
      - !Ref PublicSubnetTwoId



  launchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []

          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

    Properties:
      ImageId: ami-64260718
      InstanceType: m4.large
      SecurityGroups:
        - !Sub ${securityGroup.GroupId}
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r launchConfiguration --region ${AWS::Region} -v